"              __     _____ __  __ ____   ____     ______   __
"              \ \   / /_ _|  \/  |  _ \ / ___|   | __ ) \ / /
"               \ \ / / | || |\/| | |_) | |       |  _ \\ V /
"                \ V /  | || |  | |  _ <| |___    | |_) || |
"                 \_/  |___|_|  |_|_| \_\\____|   |____/ |_|
"
"                          _    ____  _____ ____ 
"                         / \  |  _ \| ____/ ___\
"                        / _ \ | |_) |  _| \___ \
"                       / ___ \|  _ <| |___ ___) |
"                      /_/   \_\_| \_\_____|____/


" Colorscheme
colorscheme jellybeans

set guifont=Menlo\ for\ Powerline

" Disable vi compatibility mode
set nocompatible

" Reload a file when it is changed from the outside
set autoread

" Set the leader key to ,
let mapleader=","

let &t_SI = "\e[5 q"
let &t_EI = "\e[2 q"

" Write the file when we leave the buffer
set autowrite

" Force encoding to utf-8, for systems where this is not the default (windows
" comes to mind)
set encoding=utf-8

" Show line number
set number

" Removes spaces at end of lines when writing
autocmd BufWritePre *.c,*.h,*.cpp,*.cxx,*.cc,*.hh,*.hxx :%s/\s\+$//ge

" Displays Line ends and invisible chars
set list
set listchars=tab:>-,eol:¬,trail:\ ,nbsp:¤

" Activate mac clipboard
set clipboard=unnamed

" Set the minimal amount of lignes under and above the cursor
" Useful for keeping context when moving with j/k
set scrolloff=5

" Enables syntax highlighting
syntax on

" Colors 100th column
set colorcolumn=100

" Allow mouse use in vim
set mouse=a

" Enable backspace
set backspace=start,eol,indent

" Highlight current line
set cursorline

" The length of a tab
" This is for documentation purposes only,
" do not change the default value of 8, ever.
set tabstop=8

" The number of spaces inserted when you press tab
set softtabstop=4

" The number of spaces inserted/removed when using < or >
set shiftwidth=4

" Insert spaces instead of tabs
set expandtab

autocmd BufRead,BufNewFile *.y set noexpandtab softtabstop=4 shiftwidth=4 tabstop=4

" When tabbing manually, use shiftwidth instead of tabstop and softtabstop
set smarttab

" Set basic indenting (i.e. copy the indentation of the previous line)
" When filetype detection didn't find a fancy indentation scheme
set autoindent
autocmd Filetype c set cindent

noremap <F1> :bp<cr>
noremap <F2> :bn<CR>

filetype off

if empty(glob('~/.vim/autoload/plug.vim'))
      silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
          \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
    endif

" Enable Vim-Plug
call plug#begin('~/.vim/plugged')

" Ale plugin for asynchronous syntax check
Plug 'w0rp/ale'
let g:ale_sign_error = '✘'
let g:ale_sign_warning = '⚠'

Plug 'maralla/completor.vim'

" Airline Bundle
Plug 'bling/vim-airline'
Plug 'vim-airline/vim-airline-themes'
set laststatus=2
set timeoutlen=0
let g:airline#extensions#tabline#enabled = 1
let g:airline_theme="wombat"
let g:airline_powerline_fonts = 1

" Tree Management (starts automatically if vim is opened with no specified files
Plug 'scrooloose/nerdtree'
autocmd StdinReadPre * let s:std_in=1 
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
nnoremap <silent> <C-n> :NERDTreeFind<CR>
Plug 'Xuyuanp/nerdtree-git-plugin'
let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ 'Ignored'   : '☒',
    \ "Unknown"   : "?"
    \ }

" Fugitive Bundle - Git management
Plug 'tpope/vim-fugitive'

Plug 'pakutoma/toggle-terminal'
tnoremap <silent> <C-t> <C-w>:ToggleTerminal<CR>
nnoremap <silent> <C-t> :ToggleTerminal<CR>
let g:toggle_terminal#command = 'zsh'

Plug 'yuttie/comfortable-motion.vim'

" Go plugin
Plug 'fatih/vim-go'
let g:go_list_type = "quickfix"

" Auto close brackets braces and others
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'townk/vim-autoclose'


" Toogle number lines
Plug 'jeffkreeftmeijer/vim-numbertoggle'
let g:NumberToggleTrigger=',m'

call plug#end()

filetype plugin indent on
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o
autocmd FileType gitcommit set colorcolumn=80

autocmd FileType go set tabstop=4
autocmd FileType go set noexpandtab
autocmd FileType go set nolist

map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>

au BufRead,BufNewFile *.aasm set filetype=aasm
